{"version":3,"file":"z-sails.min.js","sources":["z-sails.js","httpXHRBackend.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Sander Homan on 7/23/14.\r\n */\r\n\r\n angular.module('z-sails', []);\r\n \r\n(function(module){\r\n\r\n    module.provider('zSails', [function(){\r\n        var self = this;\r\n        self.useFileCheck = true;\r\n        self.useFallback = false;\r\n\r\n        this.$get = function(){\r\n            return {\r\n                useFileCheck: self.useFileCheck,\r\n                useFallback: self.useFallback\r\n            };\r\n        };\r\n    }]);\r\n    module.factory('$httpBackend', ['$httpXHRBackend', '$browser', 'zSails', '$window', function($httpXHRBackend, $browser, zsails, $window){\r\n\t\tvar $httpBackend = function(method, url, post, callback, headers, timeout, withCredentials, responseType){\r\n\t\t\turl = url || $browser.url();\r\n\r\n\t\t\tvar lowercaseUrl;\r\n\t\t\tif (zsails.useFileCheck)\r\n\t\t\t\tlowercaseUrl = angular.lowercase(url);\r\n\r\n\t\t\tvar methodLowercase = angular.lowercase(method);\r\n\t\t\tif ((methodLowercase !== 'get' && methodLowercase !== 'post' && methodLowercase !== 'put' && methodLowercase !== 'delete') ||\r\n\t\t\t\t(zsails.useFileCheck && lowercaseUrl.length > 5 && (lowercaseUrl[lowercaseUrl.length-5] == '.' || lowercaseUrl[lowercaseUrl.length-4] == '.'))) //check if file. files will have a . at 3rd or 4th last character\r\n\t\t\t{\r\n\t\t\t\treturn $httpXHRBackend(method, url, post, callback, headers, timeout, withCredentials, responseType);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// build request options\r\n\t\t\t\tvar options = {\r\n\t\t\t\t\tmethod: methodLowercase,\r\n\t\t\t\t\turl: url,\r\n\t\t\t\t\theaders: headers,\r\n\t\t\t\t\tdata: angular.fromJson(post)\r\n\t\t\t\t};\r\n\t\t\t\t$window.io.socket._request(options, function(data, jwr){\r\n\t\t\t\t\tif (zsails.useFallback && jwr.statusCode != 200)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$httpXHRBackend(method, url, post, callback, headers, timeout, withCredentials, responseType);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcallback(jwr.statusCode, data, jwr.headers, \"\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\treturn $httpBackend;\r\n\t}]);\r\n\r\n})(angular.module('z-sails'));","(function(module){\r\n\t'use strict';\r\n\r\n\tmodule.provider('$httpXHRBackend', $HttpBackendProvider);\r\n\r\n\tvar lowercase = angular.lowercase;\r\n\t\r\n\t// below is a copy from the angular source. This will require updating when this updates in angular, but it is a low maintenance file, so this will not happen often.\r\n\r\n\tfunction createXhr(method) {\r\n\t\t//if IE and the method is not RFC2616 compliant, or if XMLHttpRequest\r\n\t\t//is not available, try getting an ActiveXObject. Otherwise, use XMLHttpRequest\r\n\t\t//if it is available\r\n\t\tif (msie <= 8 && (!method.match(/^(get|post|head|put|delete|options)$/i) ||\r\n\t\t  !window.XMLHttpRequest)) {\r\n\t\t  return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n\t\t} else if (window.XMLHttpRequest) {\r\n\t\t  return new window.XMLHttpRequest();\r\n\t\t}\r\n\r\n\t\tthrow minErr('$httpBackend')('noxhr', \"This browser does not support XMLHttpRequest.\");\r\n\t}\r\n\r\n\t/**\r\n\t* @ngdoc service\r\n\t* @name $httpBackend\r\n\t* @requires $window\r\n\t* @requires $document\r\n\t*\r\n\t* @description\r\n\t* HTTP backend used by the {@link ng.$http service} that delegates to\r\n\t* XMLHttpRequest object or JSONP and deals with browser incompatibilities.\r\n\t*\r\n\t* You should never need to use this service directly, instead use the higher-level abstractions:\r\n\t* {@link ng.$http $http} or {@link ngResource.$resource $resource}.\r\n\t*\r\n\t* During testing this implementation is swapped with {@link ngMock.$httpBackend mock\r\n\t* $httpBackend} which can be trained with responses.\r\n\t*/\r\n\tfunction $HttpBackendProvider() {\r\n\t  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\r\n\t\treturn createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0]);\r\n\t  }];\r\n\t}\r\n\r\n\tfunction createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {\r\n\t  var ABORTED = -1;\r\n\r\n\t  // TODO(vojta): fix the signature\r\n\t  return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {\r\n\t\tvar status;\r\n\t\t$browser.$$incOutstandingRequestCount();\r\n\t\turl = url || $browser.url();\r\n\r\n\t\tif (lowercase(method) == 'jsonp') {\r\n\t\t  var callbackId = '_' + (callbacks.counter++).toString(36);\r\n\t\t  callbacks[callbackId] = function(data) {\r\n\t\t\tcallbacks[callbackId].data = data;\r\n\t\t\tcallbacks[callbackId].called = true;\r\n\t\t  };\r\n\r\n\t\t  var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\r\n\t\t\t  callbackId, function(status, text) {\r\n\t\t\tcompleteRequest(callback, status, callbacks[callbackId].data, \"\", text);\r\n\t\t\tcallbacks[callbackId] = noop;\r\n\t\t  });\r\n\t\t} else {\r\n\r\n\t\t  var xhr = createXhr(method);\r\n\r\n\t\t  xhr.open(method, url, true);\r\n\t\t  forEach(headers, function(value, key) {\r\n\t\t\tif (isDefined(value)) {\r\n\t\t\t\txhr.setRequestHeader(key, value);\r\n\t\t\t}\r\n\t\t  });\r\n\r\n\t\t  // In IE6 and 7, this might be called synchronously when xhr.send below is called and the\r\n\t\t  // response is in the cache. the promise api will ensure that to the app code the api is\r\n\t\t  // always async\r\n\t\t  xhr.onreadystatechange = function() {\r\n\t\t\t// onreadystatechange might get called multiple times with readyState === 4 on mobile webkit caused by\r\n\t\t\t// xhrs that are resolved while the app is in the background (see #5426).\r\n\t\t\t// since calling completeRequest sets the `xhr` variable to null, we just check if it's not null before\r\n\t\t\t// continuing\r\n\t\t\t//\r\n\t\t\t// we can't set xhr.onreadystatechange to undefined or delete it because that breaks IE8 (method=PATCH) and\r\n\t\t\t// Safari respectively.\r\n\t\t\tif (xhr && xhr.readyState == 4) {\r\n\t\t\t  var responseHeaders = null,\r\n\t\t\t\t  response = null,\r\n\t\t\t\t  statusText = '';\r\n\r\n\t\t\t  if(status !== ABORTED) {\r\n\t\t\t\tresponseHeaders = xhr.getAllResponseHeaders();\r\n\r\n\t\t\t\t// responseText is the old-school way of retrieving response (supported by IE8 & 9)\r\n\t\t\t\t// response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\r\n\t\t\t\tresponse = ('response' in xhr) ? xhr.response : xhr.responseText;\r\n\t\t\t  }\r\n\r\n\t\t\t  // Accessing statusText on an aborted xhr object will\r\n\t\t\t  // throw an 'c00c023f error' in IE9 and lower, don't touch it.\r\n\t\t\t  if (!(status === ABORTED && msie < 10)) {\r\n\t\t\t\tstatusText = xhr.statusText;\r\n\t\t\t  }\r\n\r\n\t\t\t  completeRequest(callback,\r\n\t\t\t\t  status || xhr.status,\r\n\t\t\t\t  response,\r\n\t\t\t\t  responseHeaders,\r\n\t\t\t\t  statusText);\r\n\t\t\t}\r\n\t\t  };\r\n\r\n\t\t  if (withCredentials) {\r\n\t\t\txhr.withCredentials = true;\r\n\t\t  }\r\n\r\n\t\t  if (responseType) {\r\n\t\t\ttry {\r\n\t\t\t  xhr.responseType = responseType;\r\n\t\t\t} catch (e) {\r\n\t\t\t  // WebKit added support for the json responseType value on 09/03/2013\r\n\t\t\t  // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are\r\n\t\t\t  // known to throw when setting the value \"json\" as the response type. Other older\r\n\t\t\t  // browsers implementing the responseType\r\n\t\t\t  //\r\n\t\t\t  // The json response type can be ignored if not supported, because JSON payloads are\r\n\t\t\t  // parsed on the client-side regardless.\r\n\t\t\t  if (responseType !== 'json') {\r\n\t\t\t\tthrow e;\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\r\n\t\t  xhr.send(post || null);\r\n\t\t}\r\n\r\n\t\tif (timeout > 0) {\r\n\t\t  var timeoutId = $browserDefer(timeoutRequest, timeout);\r\n\t\t} else if (isPromiseLike(timeout)) {\r\n\t\t  timeout.then(timeoutRequest);\r\n\t\t}\r\n\r\n\r\n\t\tfunction timeoutRequest() {\r\n\t\t  status = ABORTED;\r\n\t\t  jsonpDone && jsonpDone();\r\n\t\t  xhr && xhr.abort();\r\n\t\t}\r\n\r\n\t\tfunction completeRequest(callback, status, response, headersString, statusText) {\r\n\t\t  // cancel timeout and subsequent timeout promise resolution\r\n\t\t  timeoutId && $browserDefer.cancel(timeoutId);\r\n\t\t  jsonpDone = xhr = null;\r\n\r\n\t\t  // fix status code when it is 0 (0 status is undocumented).\r\n\t\t  // Occurs when accessing file resources or on Android 4.1 stock browser\r\n\t\t  // while retrieving files from application cache.\r\n\t\t  if (status === 0) {\r\n\t\t\tstatus = response ? 200 : urlResolve(url).protocol == 'file' ? 404 : 0;\r\n\t\t  }\r\n\r\n\t\t  // normalize IE bug (http://bugs.jquery.com/ticket/1450)\r\n\t\t  status = status === 1223 ? 204 : status;\r\n\t\t  statusText = statusText || '';\r\n\r\n\t\t  callback(status, response, headersString, statusText);\r\n\t\t  $browser.$$completeOutstandingRequest(noop);\r\n\t\t}\r\n\t  };\r\n\r\n\t  function jsonpReq(url, callbackId, done) {\r\n\t\t// we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\r\n\t\t// - fetches local scripts via XHR and evals them\r\n\t\t// - adds and immediately removes script elements from the document\r\n\t\tvar script = rawDocument.createElement('script'), callback = null;\r\n\t\tscript.type = \"text/javascript\";\r\n\t\tscript.src = url;\r\n\t\tscript.async = true;\r\n\r\n\t\tcallback = function(event) {\r\n\t\t  removeEventListenerFn(script, \"load\", callback);\r\n\t\t  removeEventListenerFn(script, \"error\", callback);\r\n\t\t  rawDocument.body.removeChild(script);\r\n\t\t  script = null;\r\n\t\t  var status = -1;\r\n\t\t  var text = \"unknown\";\r\n\r\n\t\t  if (event) {\r\n\t\t\tif (event.type === \"load\" && !callbacks[callbackId].called) {\r\n\t\t\t  event = { type: \"error\" };\r\n\t\t\t}\r\n\t\t\ttext = event.type;\r\n\t\t\tstatus = event.type === \"error\" ? 404 : 200;\r\n\t\t  }\r\n\r\n\t\t  if (done) {\r\n\t\t\tdone(status, text);\r\n\t\t  }\r\n\t\t};\r\n\r\n\t\taddEventListenerFn(script, \"load\", callback);\r\n\t\taddEventListenerFn(script, \"error\", callback);\r\n\t\trawDocument.body.appendChild(script);\r\n\t\treturn callback;\r\n\t  }\r\n\t}\r\n})(angular.module('z-sails'));"],"sourceRoot":"/source/"}